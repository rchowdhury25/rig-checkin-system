services:
  db:
    image: postgres:17-alpine3.22
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - pgdata:/var/lib/postgresql/data

  web:
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - staticvol:/web/staticfiles
      - templates:/web/templates
    restart: always
    ports:
      - '8000:8000'
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DOMAIN}
      - DEBUG=${DEBUG}
    depends_on:
      - db

  proxy:
    build:
      context: ./docker/proxy
    restart: always
    depends_on:
      - web
    ports:
      - 80:80
      - 443:443
    volumes:
      - staticvol:/vol/static
      - certbot-web:/vol/www
      - proxy-dhparams:/vol/proxy
      - certbot-certs:/etc/letsencrypt
    environment:
      - DOMAIN=${DOMAIN}

  certbot:
    build:
      context: ./docker/certbot
    command: echo "Skipping..."
    environment:
      - EMAIL=${ACME_DEFAULT_EMAIL}
      - DOMAIN=${DOMAIN}
    volumes:
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt/
    depends_on:
      - proxy


volumes:
  pgdata:
  staticvol:
  templates:
  certbot-web:
  proxy-dhparams:
  certbot-certs: